{"version":3,"file":"static/js/740.991b6b7a.chunk.js","mappings":"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","sources":["components/sections/Order/PromoCode.js","components/sections/Order/Navigation.js","components/sections/Order/Outputs/DeliveryOutput.js","components/sections/Order/Forms/Delivery.js","components/sections/Order/Forms/Information.js","components/sections/Order/Order.js","components/ui/inputs/Checkbox/Checkbox.js","components/ui/inputs/Selection/Selection.js"],"sourcesContent":["import AnimButton from \"../../ui/buttons/AnimButton/AnimButton\";\nimport Input from \"../../ui/inputs/Input/Input\";\nimport { userCartStore } from \"../../../stores/cartStore\";\nimport { formStore } from \"../../../stores/formStore\";\n\nexport default function PromoCode() {\n  const { totalPrice } = userCartStore();\n  const { updateFormData, validateFormData, clearErrors } = formStore();\n\n  return (\n    <div className=\"promo-code\">\n      <form\n        data-formkey=\"codeForm\"\n        action=\"#\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          const fd = new FormData(e.target);\n          const formDataObject = Object.fromEntries(fd.entries());\n          clearErrors(\"codeForm\");\n          if (validateFormData(\"codeForm\", formDataObject)) {\n            updateFormData(\"codeForm\", formDataObject);\n          }\n        }}\n      >\n        <div className=\"row gap-15\">\n          <Input\n            type=\"text\"\n            placeholder=\"Подарочная карта или купон\"\n            name=\"code\"\n          />\n          <AnimButton style={{ minWidth: \"170px\" }} type=\"submit\">\n            применить\n          </AnimButton>\n        </div>\n        <div className=\"row s-between wrap gap-15 text-main text-black xsmall-text \">\n          <span className=\"up-case\">промежуточный</span>\n          <span>{totalPrice()} руб</span>\n        </div>\n        <div className=\"row s-between wrap gap-15 text-main text-black xsmall-text \">\n          <span className=\"up-case\">доставка</span>\n          <span className=\"text-gray\">Расситывается на следующем шаге</span>\n        </div>\n        <div className=\"row s-between wrap gap-15 text-main text-black small-text\">\n          <span className=\"up-case\">итог</span>\n          <span>{totalPrice()} руб</span>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { modalStore } from '../../../stores/modalStore';\n\nexport default function Navigation({ activeTab }) {\n    const { toggleCart, isCartOpen } = modalStore();\n\n     const tabs = [\n        { id: 'information', label: 'информация' },\n        { id: 'delivery', label: 'доставка' },\n        { id: 'payment', label: 'оплата' },\n    ];\n\n     const getColor = (condition) => (condition ? 'var(--black)' : 'inherit');\n\n    return (\n        <div className=\"row gap-5 wrap xxxsmall-text text-main text-gray up-case\">\n            <span\n                style={{ color: getColor(isCartOpen) }}\n                onClick={toggleCart}\n            >\n                корзина\n            </span>\n\n             {tabs.map((tab) => (\n                <span\n                    key={tab.id}\n                    style={{ color: getColor(activeTab === tab.id) }}\n                  \n                >\n                    /&nbsp;&nbsp;{tab.label}\n                </span>\n            ))}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { formStore } from \"../../../../stores/formStore\";\n\nexport default function DeliveryOutput({ setActiveTab }) {\n  const { forms, errors, clearErrors, updateFormData, validateFormData } =\n    formStore();\n  const formData = forms?.infoForm?.formData;\n  return (\n    <div className=\"form-output\">\n      <div className=\"row center-y s-between wrap\">\n        <div className=\"row center-y wrap gap-20\">\n          <span className=\"xxsmall-text text-main text-black-secondary up-case\">\n            <b> Контакт</b>\n          </span>\n          <span className=\"xsmall-text text-main text-black\">\n            {formData.email}\n          </span>\n        </div>\n        <span\n          className=\"xxsmall-text text-main text-gray\"\n          onClick={() => setActiveTab(\"information\")}\n        >\n          изменить\n        </span>\n      </div>\n      <div className=\"row center-y s-between wrap\">\n        <div className=\"row center-y wrap gap-20\">\n          <span className=\"xxsmall-text text-main text-black-secondary up-case\">\n            <b>адрес</b>\n          </span>\n          <span className=\"xsmall-text text-main text-black\">\n            {formData.street} {formData.homeaddress}, {formData.index},{\" \"}\n            {formData.city}, {formData.country}\n          </span>\n        </div>\n        <span\n          className=\"xxsmall-text text-main text-gray\"\n          onClick={() => setActiveTab(\"information\")}\n        >\n          изменить\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport DeliveryOutput from \"../Outputs/DeliveryOutput\";\nimport Checkbox from \"../../../ui/inputs/Checkbox/Checkbox\";\nimport AnimButton from \"../../../ui/buttons/AnimButton/AnimButton\";\nimport arrowLeft from \"../../../../assets/icons/arrow-left.svg\";\nimport SmoothAppearance from \"../../../ui/SmoothAppearance\";\nimport { formStore } from \"../../../../stores/formStore\";\nexport default function Delivery({ setActiveTab }) {\n  const { forms, updateFormData, validateFormData } = formStore();\n\n  const [isChecked, setIsChecked] = useState(\n    forms?.deliveryForm?.formData?.deliveryType ?? \"pickup\"\n  );\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const fd = new FormData(e.target);\n    const formDataObject = {\n      deliveryType: fd.get(\"pickup\") ? \"pickup\" : \"delivery\",\n    };\n    if (validateFormData(\"deliveryForm\", formDataObject)) {\n      updateFormData(\"deliveryForm\", formDataObject);\n      // setActiveTab(\"delivery\");\n    }\n  }\n  return (\n    <SmoothAppearance blur={true}>\n      <DeliveryOutput setActiveTab={setActiveTab} />\n      <form\n        action=\"#\"\n        data-formkey=\"deliveryForm\"\n        onSubmit={(e) => handleSubmit(e)}\n        className=\"form-delivery\"\n      >\n        <span className=\"text-main xsmall-text text-black-secondary up-case\">\n          способ доставки\n        </span>\n        <div className=\"row center-y gap-20\">\n          <Checkbox\n            checked={isChecked === \"pickup\"}\n            onChange={() =>\n              setIsChecked((prev) => (prev === \"pickup\" ? \"\" : \"pickup\"))\n            }\n            label={true}\n            name=\"pickup\"\n            id=\"pickup\"\n          >\n            самовывоз (Москва, м. Ботанический сад, Сельскохозяйственная уд., д.\n            12А, стр. 6.)\n          </Checkbox>\n        </div>\n        <div className=\"row center-y gap-20\">\n          <Checkbox\n            checked={isChecked === \"delivery\"}\n            onChange={() =>\n              setIsChecked((prev) => (prev === \"delivery\" ? \"\" : \"delivery\"))\n            }\n            label={true}\n            name=\"delivery\"\n            id=\"delivery\"\n          >\n            курьер\n          </Checkbox>\n        </div>\n        <AnimButton type=\"submit\">перейти к оплате</AnimButton>\n      </form>\n      <div className=\"row center-x\">\n        <button\n          onClick={() => setActiveTab(\"information\")}\n          type=\"button\"\n          className=\"row center-y gap-15 xsmall-text text-main text-black\"\n        >\n          <img src={arrowLeft} alt=\"arrow-left\" />\n          Вернуться к информации\n        </button>\n      </div>\n    </SmoothAppearance>\n  );\n}\n","import React, { useState } from \"react\";\nimport Input from \"../../../ui/inputs/Input/Input\";\nimport SmoothAppearance from \"../../../ui/SmoothAppearance\";\nimport Checkbox from \"../../../ui/inputs/Checkbox/Checkbox\";\nimport Selection from \"../../../ui/inputs/Selection/Selection\";\nimport AnimButton from \"../../../ui/buttons/AnimButton/AnimButton\";\nimport { formStore } from \"../../../../stores/formStore\";\nexport default function Information({ setActiveTab }) {\n  const [subscribe, setSubscribe] = useState(false);\n  const [saveInfo, setSaveInfo] = useState(false);\n  const { clearErrors, forms, updateFormData, validateFormData } = formStore();\n  function handleSubmit(e) {\n    e.preventDefault();\n    const fd = new FormData(e.target);\n    const formDataObject = Object.fromEntries(fd.entries());\n    clearErrors(\"infoForm\");\n    if (validateFormData(\"infoForm\", formDataObject)) {\n      updateFormData(\"infoForm\", formDataObject);\n      setActiveTab(\"delivery\");\n    }\n  }\n\n  return (\n    <SmoothAppearance blur={true}>\n      <form\n        onSubmit={(e) => handleSubmit(e)}\n        spellCheck={false}\n        className=\"form-info text-black-secondary\"\n        action=\"#\"\n        data-formkey=\"infoForm\"\n      >\n        <div className=\"row s-between\">\n          <span className=\"text-main xsmall-text up-case\">Контакт</span>\n          <p className=\"text-main xxsmall-text text-gray\">\n            У Вас уже есть аккаунт?{\" \"}\n            <span className=\"text-black\">Авторизоваться</span>\n          </p>\n        </div>\n        <Input type=\"email\" name=\"email\" placeholder=\"Электронная почта\" />\n        <div className=\"row gap-10\">\n          <Checkbox\n            checked={subscribe}\n            onChange={() => setSubscribe((prev) => !prev)}\n            label={true}\n            name=\"subscribe\"\n            id=\"subscribe\"\n          >\n            Присылайте мне электронные письма с новостями и предложениями\n          </Checkbox>\n        </div>\n        <span className=\"text-main xsmall-text up-case\">Адрес доставки</span>\n        <Selection\n          defaultValue={forms?.infoForm?.formData?.country}\n          name=\"country\"\n          data={[\"Россия\", \"Казахстан\", \"Беларусь\", \"другая страна\"]}\n        />\n        <div className=\"row wrap gap-20\">\n          <Input type=\"text\" placeholder=\"Имя\" name=\"name\" />\n          <Input type=\"text\" placeholder=\"Фамилия\" name=\"surname\" />\n          <Input type=\"text\" placeholder=\"Город\" name=\"city\" />\n          <Input type=\"number\" placeholder=\"Индекс\" name=\"index\" />\n          <Input type=\"text\" placeholder=\"Улица\" name=\"street\" />\n          <Input type=\"number\" placeholder=\"Номер дома\" name=\"homeaddress\" />\n        </div>\n        <Input type=\"tel\" placeholder=\"Телефон\" name=\"phone\" />\n        <div className=\"row gap-10\">\n          <Checkbox\n            label={true}\n            checked={saveInfo}\n            onChange={() => setSaveInfo((prev) => !prev)}\n            name=\"save\"\n            id={\"save\"}\n          >\n            Сохраните эту информацию для использования в следующий раз\n          </Checkbox>\n        </div>\n        <AnimButton type=\"submit\">продолжить</AnimButton>\n      </form>\n    </SmoothAppearance>\n  );\n}\n","import { MainContext } from \"../../../context/MainContext\";\nimport CartItems from \"../../Cart/CartItems\";\nimport \"./order.css\";\nimport { useContext, useState } from \"react\";\nimport PromoCode from \"./PromoCode\";\n\nimport { AnimatePresence } from \"framer-motion\";\nimport Navigation from \"./Navigation\";\nimport Delivery from \"./Forms/Delivery\";\nimport Information from \"./Forms/Information\";\nimport SmoothAppearance from \"../../ui/SmoothAppearance\";\nexport default function Order() {\n  const { scrollbarAccess } = useContext(MainContext);\n  const isTouchDevice = () => {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  };\n  function allowScroll() {\n \n    scrollbarAccess.current.updatePluginOptions(\"overflow\", { open: false });\n  }\n\n  function disableScroll() {\n \n    scrollbarAccess.current.updatePluginOptions(\"overflow\", { open: true });\n  }\n  const [activeTab, setActiveTab] = useState('information')\n \n  return (\n    <section id=\"order\">\n      <div className=\"container\">\n        <div className=\"section-layout\">\n          <div>\n            <Navigation activeTab={activeTab} />\n            <AnimatePresence mode=\"wait\">\n              {\n                activeTab === 'information' ? <Information\n                setActiveTab={setActiveTab}\n                key={'information'} /> : \n                  (activeTab === 'delivery' ? <Delivery setActiveTab={setActiveTab} key={'delivery'} /> \n                  : <SmoothAppearance key={'ddsadasd'}><h1>dsadasd</h1></SmoothAppearance>)\n              }\n\n\n            </AnimatePresence>\n\n          </div>\n          <div>\n            <h5 className=\"text-black-secondary\">итоговая сумма</h5>\n            <div\n              onMouseEnter={() => !isTouchDevice() && disableScroll()}\n              onMouseLeave={() => !isTouchDevice() &&  allowScroll()}\n              onTouchStart={() => isTouchDevice() &&  disableScroll()}\n              onTouchEnd={() => isTouchDevice() &&  allowScroll()}\n              onTouchCancel={() => isTouchDevice() &&  allowScroll()}\n            >\n              <CartItems />\n            </div>\n            <PromoCode />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import \"./checkbox.css\";\nexport default function Checkbox({ label, checked, children, ...props }) {\n  return (\n    <>\n      <div className=\"custom-checkbox\">\n        <input \n        checked={checked}\n        {...props}\n\n          type=\"checkbox\" />\n        <div className=\"input-state\"></div>\n      </div>\n      {label && (\n        <label htmlFor={props.id}>\n          <p\n            className=\"text-main xxsmall-text\"\n            style={{\n              color: `${checked ? \"var(--black)\" : \"var(--gray-text)\"}`,\n            }}\n          >\n            {children}\n          </p>\n        </label>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./selection.css\";\nimport arrow from \"../../../../assets/icons/arrow-up.svg\";\n\nexport default function Selection({ name, defaultValue, data }) {\n  const [value, setValue] = useState(defaultValue ?? data[0]);\n  const [open, setOpen] = useState(false);\n\n  const calculateHeight = () => {\n    const itemHeight = 30;\n    const gap = 10;\n    const headerHeight = 48;\n    return open\n      ? `${\n          itemHeight * data.length + gap * (data.length - 1) + headerHeight * 2\n        }px`\n      : `${headerHeight}px`;\n  };\n\n  const renderColorOption = (el) => (\n    <div className=\"row center-y gap-10\">\n      <div\n        style={{\n          border:\n            el.colorName === \"белый\" ? \"1px solid var(--line-bg)\" : \"none\",\n          backgroundColor: `var(--${el.palette})`,\n        }}\n      ></div>\n      <span className=\"xsmall-text text-main text-black-secondary\">\n        {el.colorName}\n      </span>\n    </div>\n  );\n\n  const renderTextOption = (el) => (\n    <span className=\"xsmall-text text-main text-black-secondary\">{el}</span>\n  );\n\n  return (\n    <div className=\"custom-selection\">\n      <div\n        className=\"selection-group\"\n        style={{ height: calculateHeight() }}\n        onClick={() => setOpen((prev) => !prev)}\n      >\n        <div className=\"selected-option row center-y s-between\">\n          {name.includes(\"цвет\") ? (\n            renderColorOption(value)\n          ) : (\n            <span className=\"option-key xsmall-text text-main text-black-secondary\">\n              {value}\n            </span>\n          )}\n          <img\n            src={arrow}\n            alt=\"arrow\"\n            style={{ transform: open ? \"rotate(-180deg)\" : \"none\" }}\n          />\n        </div>\n\n        <ul className=\"selection-items column gap-10\">\n          {data.map((el, i) => (\n            <li key={i} onClick={() => setValue(el)}>\n              {name.includes(\"цвет\")\n                ? renderColorOption(el)\n                : renderTextOption(el)}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <input\n        type=\"hidden\"\n        name={name}\n        value={name.includes(\"цвет\") ? value.colorName : value}\n      />\n    </div>\n  );\n}\n"],"names":["PromoCode","totalPrice","userCartStore","updateFormData","validateFormData","clearErrors","formStore","_jsx","className","children","_jsxs","action","onSubmit","e","preventDefault","fd","FormData","target","formDataObject","Object","fromEntries","entries","Input","type","placeholder","name","AnimButton","style","minWidth","Navigation","_ref","activeTab","toggleCart","isCartOpen","modalStore","getColor","condition","color","onClick","id","label","map","tab","DeliveryOutput","_forms$infoForm","setActiveTab","forms","errors","formData","infoForm","email","street","homeaddress","index","city","country","Delivery","_forms$deliveryForm$f","_forms$deliveryForm","_forms$deliveryForm$f2","isChecked","setIsChecked","useState","deliveryForm","deliveryType","SmoothAppearance","blur","get","handleSubmit","Checkbox","checked","onChange","prev","src","arrowLeft","alt","Information","_forms$infoForm$formD","subscribe","setSubscribe","saveInfo","setSaveInfo","spellCheck","Selection","defaultValue","data","Order","scrollbarAccess","useContext","MainContext","isTouchDevice","window","navigator","maxTouchPoints","allowScroll","current","updatePluginOptions","open","disableScroll","AnimatePresence","mode","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","onTouchCancel","CartItems","props","_Fragment","htmlFor","value","setValue","setOpen","renderColorOption","el","border","colorName","backgroundColor","palette","renderTextOption","height","length","headerHeight","includes","arrow","transform","i"],"sourceRoot":""}