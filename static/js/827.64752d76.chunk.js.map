{"version":3,"file":"static/js/827.64752d76.chunk.js","mappings":"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","sources":["assets/icons/arrow-left.svg","assets/icons/arrow-right.svg","components/InfiniteSlider/SliderNav.js","components/InfiniteSlider/InfiniteSlider.js","hooks/useDebounce.js","components/sections/CatalogIntro/Slide.js","components/sections/CatalogIntro/CatalogIntro.js","components/sections/Filter/Article.js","components/sections/Filter/AddToFav.js","components/sections/Filter/Grid/FilterItem.js","components/sections/Filter/Grid/FilterGrid.js","hooks/useFilter.js","components/sections/Filter/Params/Main.js","components/sections/Filter/Params/FilterAccordion.js","components/sections/Filter/Params/FilterParams.js","../node_modules/swr/dist/immutable/index.mjs","assets/icons/pagination-arrow-left.svg","assets/icons/pagination-arrow-right.svg","components/sections/Filter/FilterPagination.js","hooks/usePagination.js","components/sections/Filter/Filter.js","pages/CatalogPage/DecorPage/DecorSections.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 13L0.999904 6.9999L7 0.999808\",\n    stroke: \"black\",\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.663964bd5818d0ae86708ff85e9360e8.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L7.0001 7.0001L1 13.0002\",\n    stroke: \"black\",\n    strokeLinecap: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.546c00a8f4fc58f1ad76de5d0c8aae18.svg\";\nexport { ForwardRef as ReactComponent };","// SliderNav.js\nimport React, { useState } from 'react';\nimport arrowLeft from '../../assets/icons/arrow-left.svg';\nimport arrowRight from '../../assets/icons/arrow-right.svg';\nimport useDebounce from '../../hooks/useDebounce';\n\nconst SliderNav = ({ onPrev, onNext, itemsCount }) => {\n    const [indicator, setIndicator] = useState(0);\n    const debouncedFunction = useDebounce();\n\n    const handleNextIndicator = () => {\n        debouncedFunction(700, () => {\n            setIndicator((prev) => (prev + 1) % (itemsCount - 1));\n        });\n    };\n\n    const handlePrevIndicator = () => {\n        debouncedFunction(700, () => {\n            setIndicator((prev) => (prev === 0 ? (itemsCount - 2) : prev - 1));\n        });\n    };\n\n    return (\n        // <div className='row center-x'>\n        <div className='slider-nav row center-y s-between gap-20'>\n            <button\n                type='button'\n                className='center-gr'\n                onClick={() => {\n                    onPrev();\n                    handlePrevIndicator();\n                }}\n            >\n                <img width={8.5} src={arrowLeft} alt=\"left-arrow\" />\n            </button>\n            <div className='slider-indicator'>\n                <div\n                    className='indicator-line'\n                    style={{ left: `${(100 / itemsCount) * indicator}%` }}\n                ></div>\n            </div>\n            <button\n                type='button'\n                className='center-gr'\n                onClick={() => {\n                    onNext();\n                    handleNextIndicator();\n                }}\n            >\n                <img width={8.5} src={arrowRight} alt=\"right-arrow\" />\n            </button>\n        </div>\n        // </div>\n    );\n};\n\nexport default SliderNav;\n","import React, { useEffect, useRef, useState } from 'react';\nimport SliderNav from './SliderNav';\nimport useDebounce from '../../hooks/useDebounce';\nimport './infiniteSlider.css'\n\nexport default function InfiniteSlider({ sliderData, wrapper: WrapperComponent, children}) {\n    const initialItems = sliderData.map((item, index) => ({ ...item, id: index }));\n\n    const [slideItems, setSlideItems] = useState(initialItems);\n    const [transformIndex, setTransformIndex] = useState(0);\n    const [adjustTransition, setAdjustTransition] = useState(false)\n    const debouncedFunction = useDebounce();\n    const timeoutId = useRef(null);\n\n    const handleNextSlide = () => {\n        setAdjustTransition(true)\n        debouncedFunction(700, () => {\n            setTransformIndex((prevIndex) => prevIndex + 1);\n            timeoutId.current = setTimeout(() => {\n                setSlideItems((prevItems) => {\n                    const [firstItem, ...restItems] = prevItems;\n                    return [...restItems, firstItem];\n                });\n                setTransformIndex(0);\n                setAdjustTransition(false)\n            }, 700);\n        });\n    };\n\n    const handlePrevSlide = () => {\n        setAdjustTransition(true)\n        debouncedFunction(700, () => {\n            setTransformIndex((prevIndex) => prevIndex - 1);\n            timeoutId.current = setTimeout(() => {\n                setSlideItems((prevItems) => {\n                    const lastItem = prevItems[prevItems.length - 1];\n                    return [lastItem, ...prevItems.slice(0, -1)];\n                });\n                setTransformIndex(0);\n                setAdjustTransition(false)\n            }, 700);\n        });\n    };\n\n    useEffect(() => {\n        return () => clearTimeout(timeoutId.current);\n    }, []);\n\n    return (\n        <>\n            <div className='slider-container infinite-slider'>\n                {children}\n                <div className='slider-wrapper'>\n                    {slideItems.map((el, i) => (\n                        <WrapperComponent\n                            key={el.id}\n                            adjustTransition={adjustTransition}\n                            transformIndex={i - transformIndex}\n                            el={el}\n                        />\n                    ))}\n                </div>\n            </div>\n            <SliderNav\n                onPrev={handlePrevSlide}\n                onNext={handleNextSlide}\n                itemsCount={slideItems.length}\n            />\n        </>\n    );\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nexport default function useDebounce() {\n   const [executed, setExecuted] = useState(false);\n   const timeoutId = useRef(null)\n\n    function debouncedFunction(time, fc) {\n        if (!executed) {\n            setExecuted(true);\n            fc();\n\n            timeoutId.current = setTimeout(() => {\n                setExecuted(false);\n            }, time);\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            if (timeoutId.current) {\n                clearTimeout(timeoutId.current);\n            }\n        };\n    }, []);\n\n    return debouncedFunction;\n}\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\n\nexport default function Slide({ el, adjustTransition, transformIndex }) {\n    return (\n        <div\n            className='slider-item'\n            style={{\n                left: `calc((var(--catalog-slider-img-width) + 20px) * ${transformIndex})`,\n                transition: adjustTransition ? 'var(--transition) left 0.7s' : 'unset'\n            }}\n        >\n            <div className='slider-image'>\n                <LazyLoadImage\n                    // visibleByDefault={true} \n                    src={el.image}\n                    width={'100%'}\n                    height={'100%'}\n                    effect='blur'\n                    alt={`slider-image-${el.id + 1}`} />\n            </div>\n            <h6 className='text-black up-case'>{el.name}</h6 >\n        </div>\n    )\n}\n","import React from 'react'\nimport './catalogIntro.css'\nimport InfiniteSlider from '../../InfiniteSlider/InfiniteSlider'\nimport Slide from './Slide'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\nexport default function CatalogIntro({ bg, headline, text, sliderData }) {\n    return (\n        <section id='catalog-intro'>\n            <div className='catalog-bg text-center center-gr up-case'>\n                <LazyLoadImage\n                     \n                    width={'100%'}\n                    // height={'100%'}\n                    effect='blur'\n                    alt='decor'\n                    src={bg} />\n                <h2 className='text-light'>{headline}</h2>\n                <p className='small-text text-main text-light'>{text}</p>\n            </div>\n            <div className='container'>\n                <InfiniteSlider sliderData={sliderData} wrapper={Slide} />\n            </div>\n        </section>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Article(props) {\n  return (\n      <article {...props} id=\"article\" >\n       <Link>\n       \n       </Link>\n      </article>\n  )\n}\n","import React, { useState } from 'react'\n\nexport default function AddToFav() {\n     return (\n        <div className='add-to-favorites' >\n            <input type='checkbox'  />\n            <svg width=\"28\" height=\"25\" viewBox=\"-2 -1 30 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M0.000650381 6.49917C-0.0200806 5.03049 0.455348 3.59918 1.34726 2.44508C2.23918 1.29099 3.49338 0.484252 4.8997 0.160054C6.30602 -0.164144 7.77899 0.0139016 9.07178 0.664354C10.3646 1.31481 11.3986 2.39814 12.0006 3.73281C12.6041 2.39369 13.6424 1.30748 14.9404 0.65729C16.2384 0.00710175 17.7168 -0.167297 19.1263 0.163495C20.5358 0.494287 21.7903 1.31004 22.6782 2.47323C23.5661 3.63642 24.0332 5.0759 24.0006 6.54901C23.9291 8.42848 23.2881 10.2393 22.1658 11.7328C21.0431 13.2871 19.7227 14.6825 18.2392 15.8823C16.3827 17.4018 14.3879 18.737 12.282 19.8699L12.0006 19.9322L11.7193 19.7827C9.61342 18.6498 7.61863 17.3146 5.76212 15.7951C4.2786 14.5952 2.95817 13.1998 1.83551 11.6456C0.720273 10.1624 0.0797062 8.36573 0.000650381 6.49917Z\"\n                    stroke=\"black\"\n                    strokeWidth=\"1.5\"\n                />\n            </svg>\n        </div>\n    )\n}\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\n\nimport AddToFav from '../AddToFav'\nexport default function FilterItem({ item, el }) {\n    return (\n        <div className=\"filter-item\"\n            style={{ gridArea: el, }}>\n            <AddToFav />\n            {item ? (\n                <div className='placeholder'\n                    style={{ backgroundColor: `var(--${item.colors[0]})`, height: el === 'l' ? 'calc(var(--filter-item-img-height) * 2 + 125px)' : 'var(--filter-item-img-height)' }}>\n                    <LazyLoadImage\n                        effect=\"opacity\"\n                        height={'inherit'}\n                        width=\"100%\"\n                        src={item.img}\n                        alt={item.name}\n                        className=\"image\"\n                    />\n                </div>\n            ) : null}\n            <span className='xxsmall-text text-main text-black up-case'>{item.name}</span>\n            <span className='xxxsmall-text  text-main text-black'>{item.price.toLocaleString('ru-RU')} руб.</span>\n            <div className='palette row gap-10'>\n                {\n                    item.colors.map((el, i) => {\n                        return <div key={i}\n                            style={{\n                                backgroundColor: `var(--${el})`,\n                                border: el === 'white' ? '1px solid #DDDDDD' : 'none'\n                            }}></div>\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n","import Article from '../Article';\nimport FilterItem from './FilterItem';\n\nexport default function FilterGrid({ data }) {\n\n  let gridAreas = [\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\n  ];\n   const visibleItems = data.filter(item => item?.isShown !== false);\n\n  let dataIndex = 0;\n  return (\n    <div className=\"filter-display\">\n      {data && gridAreas.slice(0, visibleItems.length >= 9 ? visibleItems.length + 1 : visibleItems.length).map((el, i) => {\n        if (el === 'j') {\n          return <Article style={{ gridArea: 'j' }} key=\"article\"></Article>;\n        }\n        const item = visibleItems[dataIndex];\n\n        if (item) {\n          dataIndex++;\n        }\n\n     \n        return <FilterItem key={item.id} el={el} item={item} />\n      \n      })}\n\n    </div>\n\n  );\n}\n","import { useEffect } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nexport default function useFilter(filterParam) {\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const allFilterParams = searchParams.getAll(filterParam) ?? ''\n\n    function handleSearchParams(filterValue) {\n\n        if (filterParam === 'filter' && searchParams.length !== 0 && filterValue === 'all') {\n            searchParams.delete(filterParam)\n            setSearchParams(searchParams)\n            return\n        }\n\n        if (allFilterParams.includes(filterValue)) {\n            searchParams.delete(filterParam, filterValue)\n            setSearchParams(searchParams)\n        } else {\n            searchParams.append(filterParam, filterValue)\n            setSearchParams(searchParams)\n        }\n    }\n\n    // function handleFilter(mutate) {\n    //     const keys = new Set([])\n    //     const values = new Set([])\n\n    //     for (const [key, value] of searchParams.entries()) {\n    //         if (key !== 'page' && key !== 'filter') {\n    //             keys.add(key)\n    //             values.add(value)\n    //         }\n    //     }\n\n\n\n    //     mutate((data) => {\n    //         return data.map((el) => {\n    //             const isMatch = el[keys]\n    //             return { ...el, isShown: isMatch };\n    //         });\n    //     }, false);\n\n    // }\n\n    function handleFilter(mutate) {\n        const filters = {}\n\n        for (const [key, value] of searchParams.entries()) {\n            if (key !== 'page' && key !== 'filter') {\n                if (filters[key]) {\n                    filters[key].push(value)\n                } else {\n                    filters[key] = [value]\n                }\n            }\n        }\n\n        if (Object.keys(filters).length > 0) {\n            mutate((data) => {\n                return data.map((el) => {\n                    const isMatch = Object.entries(filters).every(([key, value]) => {\n                        return value.includes(el[key])\n                    });\n\n                    return { ...el, isShown: isMatch };\n                });\n            }, false);\n        } else {\n            mutate((data) => {\n                return data.map((el) => {\n                    return { ...el, isShown: true }\n                })\n            })\n        }\n    }\n\n    // if (allFilterParams.length === 0) {\n    //     mutate((data) => {\n    //         return data.map((el) => {\n    //             return { ...el, isShown: true };\n    //         });\n    //     }, false);\n    //     return;\n    // }\n\n    return (\n        {\n            handleSearchParams,\n            handleFilter,\n            allFilterParams\n        }\n    )\n}\n","import useFilter from '../../../../hooks/useFilter';\n\nexport default function Main({  headline }) {\n\n const {allFilterParams, handleSearchParams} = useFilter('filter')\n\n    return (\n        <div className=\"main-filter column gap-15 xsmall-text text-main text-black up-case\">\n            <span\n                className={`${allFilterParams.length === 0 ? 'active' : 'inactive'}`}\n                onClick={() => handleSearchParams('all')}\n            >\n                {headline}\n            </span>\n            <span\n                className={`${allFilterParams.includes('discount') ? 'active' : 'inactive'}`}\n                onClick={() => handleSearchParams('discount')}\n            >\n                скидки\n            </span>\n            <span\n                className={`${allFilterParams.includes('isNew') ? 'active' : 'inactive'}`}\n                onClick={() => handleSearchParams('isNew')}\n            >\n                новинки\n            </span>\n            <span\n                className={`${allFilterParams.includes('bestseller') ? 'active' : 'inactive'}`}\n                onClick={() => handleSearchParams('bestseller')}\n            >\n                бестселлеры\n            </span>\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport useFilter from '../../../../hooks/useFilter'\nexport default function FilterAccordion({ headline, filterParam, data, elHeight }) {\n    const [open, setOpen] = useState(false)\n \n    const { handleSearchParams } = useFilter(filterParam)\n \n    return (\n        <>\n            <div className='row center-y s-between'>\n                <span className='xsmall-text up-case'>\n                    {headline}\n                </span>\n                <span\n                    className='open-accordion'\n                    style={{ margin: !open ? '0 25px 0 0' : '-3px 23px 0px 0px' }} onClick={() => setOpen(!open)}>\n                    {open ? '—' : '+'}\n                </span>\n\n            </div>\n            <div\n                className='accordion'\n                style={{ height: open ? `${data.length * elHeight + (data.length - 1) * 15 + 20}px` : '0px' }}\n            >\n                <ul className='column gap-15'>\n                    {data.map((el, i) => {\n                        return <li key={i} className='row center-y gap-10'>\n                            <div className='custom-radio'>\n                                <input onChange={(e) => handleSearchParams(e.target.value)} id={el} type='checkbox' value={el} />\n                                <div className='input-state'>\n                                </div>\n                            </div>\n                            <span>{el}</span>\n                        </li>\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n","import Main from './Main';\nimport FilterAccordion from './FilterAccordion';\n\nexport default function FilterParams({ collections, materials }) {\n\n\n\n  return (\n    <div className=\"filter-params\">\n      <Main\n        headline=\"весь декор\"\n      />\n      <div className=\"collections-filter xsmall-text text-main text-black up-case\">\n        <FilterAccordion\n          elHeight={30}\n          headline=\"коллекции\"\n          filterParam={\"collection\"}\n          data={collections}\n        />\n      </div>\n      <div className=\"materials-filter xxsmall-text text-main text-black\">\n        <FilterAccordion\n          elHeight={20}\n          headline=\"материал\"\n          filterParam={\"material\"}\n          data={materials}\n        />\n      </div>\n    </div>\n  );\n}\n","import 'client-only';\nimport ReactExports, { useRef, useMemo, useCallback, useDebugValue } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim/index.js';\nimport { OBJECT, SWRConfig, defaultConfig, withArgs, SWRGlobalState, serialize, createCacheHelper, isUndefined, getTimestamp, UNDEFINED, isFunction, revalidateEvents, internalMutate, useIsomorphicLayoutEffect, subscribeCallback, IS_SERVER, rAF, IS_REACT_LEGACY, mergeObjects, withMiddleware } from 'swr/_internal';\n\n/// <reference types=\"react/experimental\" />\nconst use = ReactExports.use || ((promise)=>{\n    if (promise.status === 'pending') {\n        throw promise;\n    } else if (promise.status === 'fulfilled') {\n        return promise.value;\n    } else if (promise.status === 'rejected') {\n        throw promise.reason;\n    } else {\n        promise.status = 'pending';\n        promise.then((v)=>{\n            promise.status = 'fulfilled';\n            promise.value = v;\n        }, (e)=>{\n            promise.status = 'rejected';\n            promise.reason = e;\n        });\n        throw promise;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = serialize(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = useRef(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = useRef(false);\n    // Refs to keep the key and config.\n    const keyRef = useRef(key);\n    const fetcherRef = useRef(fetcher);\n    const configRef = useRef(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = createCacheHelper(cache, key);\n    const stateDependencies = useRef({}).current;\n    const fallback = isUndefined(fallbackData) ? config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!isUndefined(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = useMemo(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!isUndefined(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            if (!isUndefined(revalidateIfStale)) return revalidateIfStale;\n            return true;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = mergeObjects(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = useSyncExternalStore(useCallback((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = isUndefined(cachedData) ? fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = useRef(data);\n    const returnedData = keepPreviousData ? isUndefined(cachedData) ? laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !isUndefined(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !isUndefined(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return isUndefined(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return isUndefined(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = isUndefined(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = isUndefined(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = useCallback(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if (isUndefined(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && isUndefined(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    getTimestamp()\n                ];\n            }\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = UNDEFINED;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!isUndefined(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || isFunction(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = useCallback(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return internalMutate(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    useIsomorphicLayoutEffect(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!isUndefined(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    useIsomorphicLayoutEffect(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(UNDEFINED, WITH_DEDUPE);\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        let nextFocusRevalidatedAt = 0;\n        const onRevalidate = (type, opts = {})=>{\n            if (type == revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = subscribeCallback(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if (isUndefined(data) || IS_SERVER) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                rAF(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    useIsomorphicLayoutEffect(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = isFunction(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    useDebugValue(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && isUndefined(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any initial data. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!IS_REACT_LEGACY && IS_SERVER) {\n            throw new Error('Fallback data is required when using suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!isUndefined(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if (isUndefined(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!isUndefined(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    return {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n};\nOBJECT.defineProperty(SWRConfig, 'defaultValue', {\n    value: defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = withArgs(useSWRHandler);\n\nconst immutable = (useSWRNext)=>(key, fetcher, config)=>{\n        // Always override all revalidate options.\n        config.revalidateOnFocus = false;\n        config.revalidateIfStale = false;\n        config.revalidateOnReconnect = false;\n        return useSWRNext(key, fetcher, config);\n    };\nconst useSWRImmutable = withMiddleware(useSWR, immutable);\n\nexport { useSWRImmutable as default, immutable };\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPaginationArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 10,\n    viewBox: \"0 0 7 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.625 4.14844L6.01562 0.109375L6.8125 0.96875L2.50781 4.82031L6.8125 8.67188L6.01562 9.53125L0.898438 4.82031L1.625 4.14844Z\",\n    fill: \"#A5A5A5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPaginationArrowLeft);\nexport default __webpack_public_path__ + \"static/media/pagination-arrow-left.df03b068cc2d9c293788f72e40958200.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPaginationArrowRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 10,\n    viewBox: \"0 0 7 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.32031 9.53125L0.523438 8.67188L4.82812 4.82031L0.523438 0.96875L1.32031 0.109375L6.4375 4.82031L1.32031 9.53125Z\",\n    fill: \"#A5A5A5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPaginationArrowRight);\nexport default __webpack_public_path__ + \"static/media/pagination-arrow-right.09326ff90cb67244b048fb55c1d2b033.svg\";\nexport { ForwardRef as ReactComponent };","import usePagination from '../../../hooks/usePagination';\nimport arrowLeft from '../../../assets/icons/pagination-arrow-left.svg'\nimport arrowRight from '../../../assets/icons/pagination-arrow-right.svg'\n \nexport default function FilterPagination({ pagesCount }) {\n\n    const { pages, activePage, handlePagination } = usePagination(pagesCount);\n\n\n    return (\n        <div className='filter-pagination'>\n            <div className='row gap-30 center-y end-x'>\n                <div className='prev' onClick={() => handlePagination(activePage-1)}>\n                    <img src={arrowLeft} alt='prev' /> \n                </div>\n                <ul className='row gap-10 xsmall-text text-main'>\n                    {\n                        pages.map((el, i) => (\n                            <li \n                            style={{pointerEvents: el !== '...' ? 'all' : 'none'}}\n                            className={(activePage == el && el !== '...') ? 'active' : 'inactive'}\n                            onClick={() => handlePagination(el)} key={i}>{el}</li>\n                        ))\n                    }\n                </ul>\n                <div className='next'\n                    onClick={() => handlePagination(activePage+1)}\n                ><img src={arrowRight} alt='next' />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\n","import { useState, useContext } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MainContext } from '../context/MainContext';\nexport default function usePagination(pagesCount) {\n    const [pages, setPages] = useState(pagesCount > 5 ? [1, 2, 3, 4, 5, '...', pagesCount] :\n        Array(pagesCount).fill(null).map((_, i) => i + 1));\n    const [searchParams, setSearchParams] = useSearchParams()\n    const activePage = parseInt(searchParams.get('page') ?? 1)\n\n    const { scrollbarAccess } = useContext(MainContext)\n\n    const handlePagination = (page) => {\n        if (page > pagesCount || page <= 0 || page === '...') return;\n        scrollbarAccess.current.scrollTo(0, 750, 500)\n        setTimeout(() => {\n            if (pagesCount > 5) {\n                if (page >= 5 && page + 2 < pagesCount) {\n                    setPages([1, '...', page - 1, page, page + 1, '...', pagesCount]);\n                } else if (page + 2 >= pagesCount) {\n                    setPages([1, '...', pagesCount - 4, pagesCount - 3, pagesCount - 2, pagesCount - 1, pagesCount]);\n                } else {\n                    setPages([1, 2, 3, 4, 5, '...', pagesCount]);\n                }\n            }\n           \n \n \n            searchParams.set('page', page);\n            setSearchParams(searchParams);\n        }, 300);\n\n    };\n\n    return { pages, activePage, handlePagination };\n}\n","import React, { useEffect } from 'react';\nimport FilterGrid from './Grid/FilterGrid';\nimport FilterParams from './Params/FilterParams';\nimport './filter.css';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport useSWRImmutable from 'swr/immutable';\nimport { getLength } from '../../../db/loadData';\nimport SmoothAppearance from '../../ui/SmoothAppearance';\nimport { AnimatePresence } from 'framer-motion';\nimport FilterPagination from './FilterPagination'\nimport useFilter from '../../../hooks/useFilter';\nexport default function Filter({ collections, materials }) {\n    const location = useLocation();\n    const key = location.pathname.split('/')[2]\n\n    const [searchParams] = useSearchParams()\n\n    const page = parseInt(searchParams.get('page') ?? 1)\n\n\n    const { data, error, isLoading, mutate } = useSWRImmutable([key, page]);\n    const { data: dataLength, } = useSWRImmutable([key], getLength,);\n    const { handleFilter } = useFilter()\n\n    useEffect(() => {\n        if(!data) return\n        handleFilter(mutate)\n \n    }, [data])\n\n\n    return (\n        <section id=\"filter\">\n            <div className=\"container\">\n                <div className=\"section-layout\">\n                    <FilterParams\n                        materials={materials}\n                        collections={collections} />\n\n                    <AnimatePresence mode='wait'>\n                        {\n                            !isLoading ?\n                                <SmoothAppearance key={searchParams}>\n                                    {\n                                        !error && (data && data.length > 0 ?\n\n                                            <FilterGrid\n                                                data={data} />\n\n                                            : <div className='row center-x center-y'>\n                                                <h2>No page found</h2>\n                                            </div>)\n                                    }\n                                </SmoothAppearance> :\n                                <SmoothAppearance>\n                                    <div className='row center-x center-y'>\n                                        <h2>Loading...</h2>\n                                    </div>\n                                </SmoothAppearance>\n                        }\n\n                    </AnimatePresence>\n\n                    {error && <div className='row center-x center-y'>\n                        <h2>{error.message}</h2>\n                    </div>}\n                    {dataLength && <FilterPagination pagesCount={Math.ceil(dataLength / 17)} />}\n                </div>\n            </div>\n        </section>\n    );\n}\n","import React from 'react'\nimport bg from '../../../assets/img_16.webp'\nimport img1 from '../../../assets/decor/img_6.jpg'\nimport img2 from '../../../assets/decor/img_7.jpg'\nimport img3 from '../../../assets/decor/img_8.jpg'\nimport img4 from '../../../assets/decor/img_9.jpg'\nimport img5 from '../../../assets/decor/img_10.jpg'\n \nimport CatalogIntro from '../../../components/sections/CatalogIntro/CatalogIntro'\nimport Filter from '../../../components/sections/Filter/Filter'\n\nexport default function DecorSections() {\n \n    const initialItems = [\n        { name: \"картины\", image: img1 },\n        { name: \"свечи\", image: img2 },\n        { name: \"вазы и кашпо\", image: img3 },\n        { name: \"зеркала\", image: img4 },\n        { name: \"часы\", image: img5 },\n        { name: \"картины\", image: img1 },\n        { name: \"свечи\", image: img2 },\n        { name: \"вазы и кашпо\", image: img3 },\n        { name: \"зеркала\", image: img4 },\n        { name: \"часы\", image: img5 },\n    ]\n    return (\n        <>\n            <CatalogIntro\n                sliderData={initialItems}\n                bg={bg}\n                headline={'декор'}\n                text={'Изысканные детали для уюта и стиля: обогатите свой интерьер уникальными декоративными акцентами'}\n            />\n            <Filter\n            materials={[\"ткань\", \"кожа\", \"стекло\", \"керамика\" ,\"мрамор\"]}\n            collections={['картины', 'свечи', 'вазы и кашпо', 'зеркала','часы']}/>\n        </>\n    )\n}\n"],"names":["_ref","onPrev","onNext","itemsCount","indicator","setIndicator","useState","debouncedFunction","useDebounce","_jsxs","className","children","_jsx","type","onClick","prev","width","src","arrowLeft","alt","style","left","arrowRight","InfiniteSlider","sliderData","wrapper","WrapperComponent","initialItems","map","item","index","id","slideItems","setSlideItems","transformIndex","setTransformIndex","adjustTransition","setAdjustTransition","timeoutId","useRef","useEffect","clearTimeout","current","_Fragment","el","i","SliderNav","handlePrevSlide","prevIndex","setTimeout","prevItems","length","slice","handleNextSlide","firstItem","restItems","executed","setExecuted","time","fc","Slide","transition","LazyLoadImage","image","height","effect","name","CatalogIntro","bg","headline","text","Article","props","Link","AddToFav","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","FilterItem","gridArea","backgroundColor","colors","img","price","toLocaleString","border","FilterGrid","data","visibleItems","filter","isShown","dataIndex","useFilter","filterParam","_searchParams$getAll","searchParams","setSearchParams","useSearchParams","allFilterParams","getAll","handleSearchParams","filterValue","delete","includes","append","handleFilter","mutate","filters","key","value","entries","push","Object","keys","isMatch","every","Main","FilterAccordion","elHeight","open","setOpen","margin","onChange","e","target","FilterParams","collections","materials","use","ReactExports","promise","status","reason","then","v","WITH_DEDUPE","dedupe","OBJECT","defineProperty","SWRConfig","defaultConfig","useSWR","withArgs","useSWRHandler","_key","fetcher","config","cache","compare","suspense","fallbackData","revalidateOnMount","revalidateIfStale","refreshInterval","refreshWhenHidden","refreshWhenOffline","keepPreviousData","EVENT_REVALIDATORS","MUTATION","FETCH","PRELOAD","SWRGlobalState","get","fnArg","serialize","initialMountedRef","unmountedRef","keyRef","fetcherRef","configRef","getConfig","isActive","isVisible","isOnline","getCache","setCache","subscribeCache","getInitialCache","createCacheHelper","stateDependencies","fallback","isUndefined","isEqual","_","t","returnedData","getSnapshot","useMemo","shouldStartRequest","isPaused","getSelectedCache","state","snapshot","mergeObjects","_k","isValidating","isLoading","cachedData","initialData","clientSnapshot","serverSnapshot","memorizedSnapshot","newSnapshot","error","cached","useSyncExternalStore","useCallback","callback","isInitialMount","hasRevalidator","laggyDataRef","shouldDoInitialRevalidation","defaultValidatingState","revalidate","async","currentFetcher","newData","startAt","loading","opts","revalidateOpts","shouldStartNewRequest","callbackSafeguard","IS_REACT_LEGACY","finalState","finishRequestAndUpdateState","cleanupState","requestInfo","initialState","loadingTimeout","onLoadingSlow","getTimestamp","dedupingInterval","onDiscarded","UNDEFINED","mutationInfo","cacheData","onSuccess","err","currentConfig","shouldRetryOnError","onError","isFunction","revalidateOnFocus","revalidateOnReconnect","onErrorRetry","_opts","revalidators","revalidateEvents","ERROR_REVALIDATE_EVENT","retryCount","boundMutate","_len","arguments","args","Array","_key2","internalMutate","useIsomorphicLayoutEffect","softRevalidate","bind","nextFocusRevalidatedAt","unsubEvents","subscribeCallback","undefined","FOCUS_EVENT","now","Date","focusThrottleInterval","RECONNECT_EVENT","MUTATE_EVENT","IS_SERVER","rAF","timer","next","interval","execute","useDebugValue","Error","req","useSWRImmutable","withMiddleware","useSWRNext","FilterPagination","pagesCount","pages","activePage","handlePagination","_searchParams$get","setPages","parseInt","scrollbarAccess","useContext","MainContext","page","scrollTo","set","usePagination","pointerEvents","Filter","useLocation","pathname","split","dataLength","getLength","AnimatePresence","mode","SmoothAppearance","message","Math","ceil","DecorSections","img1","img2","img3","img4","img5"],"sourceRoot":""}