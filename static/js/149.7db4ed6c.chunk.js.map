{"version":3,"file":"static/js/149.7db4ed6c.chunk.js","mappings":"+NAUe,SAASA,IAEpB,MAAM,SAAEC,EAAQ,cAAEC,EAAa,iBAAEC,EAAgB,iBAAEC,IAAqBC,EAAAA,EAAAA,KAClEC,GAAYC,EAAAA,EAAAA,IAAeC,GAAUA,EAAMC,cAC3C,YAAEC,IAAgBC,EAAAA,EAAAA,KAExB,OACIC,EAAAA,EAAAA,KAAA,WAASC,GAAG,YAAWC,UAEnBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UAGtBF,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CAACC,KAAK,OAAOC,SAAS,EAAMJ,SACvCb,EAASkB,OAAS,GAAIP,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAAAN,UAGpCF,EAAAA,EAAAA,KAAA,MAEIG,UAAU,0BAAyBD,SAClCb,EAASoB,KAAKC,IACXC,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAERC,QAASH,EAAGR,SAAA,EAGRF,EAAAA,EAAAA,KAACc,EAAAA,EAAQ,CACLD,QAASH,EACTnB,iBAAkBA,EAClBC,iBAAkBA,EAClBF,cAAeA,KAEnBU,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAUC,IAClBA,EAAEC,kBACFxB,EAAU,IAAKgB,EAAIS,SAAUT,EAAGS,WAAarB,IAAesB,YAAW,KACnEtB,GAAa,GACd,KAAK,EACVI,SAAC,yGAfFQ,EAAGT,SANf,SA4BaD,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAAAN,UAEnCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,cAAaD,SAAC,oJADvB,mBAajC,C,0DCjEO,MAAMT,GAAe4B,EAAAA,EAAAA,IACxBC,EAAAA,EAAAA,KACI,CAACC,EAAKC,KAAG,CACLnC,SAAU,GAEVQ,WAAa4B,IACTF,GAAK3B,IAKD,GAJsBA,EAAMP,SAASqC,MAChChB,GAAOA,EAAGT,KAAOwB,EAAKxB,KASpB,CAIH,MAAO,CAAEZ,SAHeO,EAAMP,SAASoB,KAAKC,GACxCA,EAAGT,KAAOwB,EAAKxB,GAAK,IAAKS,EAAIS,SAAUT,EAAGS,SAAW,GAAMT,IAGnE,CANI,MAAO,CAAErB,SAJe,IACjBO,EAAMP,SACT,IAAKoC,EAAMN,SAAU,IAQ7B,GACF,EAGN7B,cAAgBqC,IACZJ,GAAK3B,IAIM,CAAEP,SAHeO,EAAMP,SAASuC,QAClCH,GAASA,EAAKxB,KAAO0B,OAG5B,EAGNpC,iBAAmBoC,IACfJ,GAAK3B,IAIM,CAAEP,SAHeO,EAAMP,SAASoB,KAAKC,GACxCA,EAAGT,KAAO0B,EAAS,IAAKjB,EAAIS,SAAUT,EAAGS,SAAW,GAAMT,OAGhE,EAGNlB,iBAAkBA,CAACmC,EAAQR,KACvBI,GAAK3B,IACD,IAAIiC,EAAkB,GAYtB,OAVIA,EADa,IAAbV,EACkBvB,EAAMP,SAASuC,QAC5BH,GAASA,EAAKxB,KAAO0B,IAGR/B,EAAMP,SAASoB,KAAKC,GAClCA,EAAGT,KAAO0B,EACJ,IAAKjB,EAAIS,SAAUW,KAAKC,IAAI,EAAGrB,EAAGS,SAAW,IAC7CT,IAGP,CAAErB,SAAUwC,EAAiB,GACtC,KAKV,CACIG,KAAM,cACNC,WAAYA,IAAMC,e","sources":["pages/FavoritesPage/FavoritesSections.js","stores/favStore.js"],"sourcesContent":["import React from 'react'\nimport './favorites.css'\nimport { userFavStore } from '../../stores/favStore';\nimport { AnimatePresence } from 'framer-motion';\nimport SmoothAppearance from '../../components/ui/SmoothAppearance';\nimport CartItem from '../../components/Cart/CartItem/CartItem';\nimport { userCartStore } from '../../stores/cartStore';\nimport MainButton from '../../components/ui/buttons/MainButton/MainButton';\nimport { modalStore } from '../../stores/modalStore';\nimport CartWrapper from '../../components/Cart/CartItem/CartWrapper';\nexport default function FavoritesSections() {\n\n    const { products, removeProduct, increaseQuantity, decreaseQuantity } = userFavStore();\n    const addToCart = userCartStore((state) => state.addProduct);\n    const { toggleAdded } = modalStore()\n \n    return (\n        <section id='favorites'>\n\n            <div className='center-flex'>\n                <div className='container'>\n\n\n                    <AnimatePresence mode=\"wait\" initial={false}>\n                        {products.length > 0 ? <SmoothAppearance\n\n                            key={\"list\"}>\n                            <ul\n\n                                className=\"fav-items column gap-40\">\n                                {products.map((el) => (\n                                    <CartWrapper \n                                        key={el.id}\n                                        product={el}\n                                    >\n                           \n                                            <CartItem\n                                                product={el}\n                                                increaseQuantity={increaseQuantity}\n                                                decreaseQuantity={decreaseQuantity}\n                                                removeProduct={removeProduct}\n                                            />\n                                            <MainButton onClick={(e) => {\n                                                e.stopPropagation()\n                                                addToCart({ ...el, quantity: el.quantity }); toggleAdded(); setTimeout(() => {\n                                                    toggleAdded()\n                                                }, 1500);\n                                            }}>\n                                                добавить в корзину\n                                            </MainButton>\n                                \n                                    </CartWrapper>\n                                ))}\n                            </ul>\n                        </SmoothAppearance> : <SmoothAppearance\n                            key={'no-found'}>\n                            <h5 className=\"text-center\">\n                                у вас нет избранных товаров\n                            </h5>\n                        </SmoothAppearance>}\n                    </AnimatePresence>\n\n\n                </div>\n            </div>\n\n        </section>\n    )\n}\n","import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nexport const userFavStore = create(\n    persist(\n        (set, get) => ({\n            products: [],\n\n            addProduct: (item) => {\n                set((state) => {\n                    const productExists = state.products.some(\n                        (el) => el.id === item.id\n                    );\n\n                    if (!productExists) {\n                        const updatedProducts = [\n                            ...state.products,\n                            { ...item, quantity: 1 },\n                        ];\n                        return { products: updatedProducts };\n                    } else {\n                        const updatedProducts = state.products.map((el) =>\n                            el.id === item.id ? { ...el, quantity: el.quantity + 1 } : el\n                        );\n                        return { products: updatedProducts };\n                    }\n                });\n            },\n\n            removeProduct: (itemId) => {\n                set((state) => {\n                    const updatedProducts = state.products.filter(\n                        (item) => item.id !== itemId\n                    );\n                    return { products: updatedProducts };\n                });\n            },\n\n            increaseQuantity: (itemId) => {\n                set((state) => {\n                    const updatedProducts = state.products.map((el) =>\n                        el.id === itemId ? { ...el, quantity: el.quantity + 1 } : el\n                    );\n                    return { products: updatedProducts };\n                });\n            },\n\n            decreaseQuantity: (itemId, quantity) => {\n                set((state) => {\n                    let updatedProducts = []\n                    if (quantity === 1) {\n                        updatedProducts = state.products.filter(\n                            (item) => item.id !== itemId\n                        );\n                    } else {\n                        updatedProducts = state.products.map((el) =>\n                            el.id === itemId\n                                ? { ...el, quantity: Math.max(1, el.quantity - 1) }\n                                : el\n                        );\n                    }\n                    return { products: updatedProducts };\n                });\n            },\n\n\n        }),\n        {\n            name: \"fav-storage\",\n            getStorage: () => localStorage,\n        }\n    )\n);\n"],"names":["FavoritesSections","products","removeProduct","increaseQuantity","decreaseQuantity","userFavStore","addToCart","userCartStore","state","addProduct","toggleAdded","modalStore","_jsx","id","children","className","AnimatePresence","mode","initial","length","SmoothAppearance","map","el","_jsxs","CartWrapper","product","CartItem","MainButton","onClick","e","stopPropagation","quantity","setTimeout","create","persist","set","get","item","some","itemId","filter","updatedProducts","Math","max","name","getStorage","localStorage"],"sourceRoot":""}